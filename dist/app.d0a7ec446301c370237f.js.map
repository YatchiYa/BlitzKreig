{"version":3,"sources":["webpack:///./static/style/style.css","webpack:///./src/index.js","webpack:///./static/style/style.css?e851"],"names":["module","exports","__webpack_require__","push","i","r","__webpack_exports__","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","n","component","element","document","createElement","button","br","innerHTML","a","join","appendChild","onclick","e","then","bind","print","default","body","hot","accept","__WEBPACK_OUTDATED_DEPENDENCIES__","console","log","removeChild","content","options","hmr","transform","insertInto","undefined","update","locals","newContent","b","key","idx","Error","dispose"],"mappings":"0EAAAA,EAAAC,QAA2BC,EAAQ,EAARA,EAAuD,IAKlFC,KAAA,CAAcH,EAAAI,EAAS,uEAAmE,qCCL1FF,EAAAG,EAAAC,GAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAL,EAAA,GAIA,SAAAQ,IAMA,IAAAC,EAAAC,SAAAC,cAAA,OACAC,EAAAF,SAAAC,cAAA,UACAE,EAAAH,SAAAC,cAAA,MAoBA,OAhBAC,EAAAE,UAAA,oCACAL,EAAAK,UAAsBR,EAAAS,EAACC,KAAA,2BAGvBP,EAAAQ,YAAAJ,GACAJ,EAAAQ,YAAAL,GAMAA,EAAAM,QAAAC,IAAsBnB,EAAAmB,EAAA,GAAAC,KAAApB,EAAAqB,KAAA,SAAiDD,KAAAtB,KAEvEwB,EADAxB,EAAAyB,cAIAd,EAOA,IAAAA,EAAAD,IACAE,SAAAc,KAAAP,YAAAR,GAGAX,EAAA2B,IAAAC,OAAsB,EAAc,SAAAC,GACpCC,QAAAC,IAAA,yCACAnB,SAAAc,KAAAM,YAAArB,GACAA,EAAAD,IACAE,SAAAc,KAAAP,YAAAR,wBC9CA,IAAAsB,EAAc/B,EAAQ,GAEtB,iBAAA+B,MAAA,EAA4CjC,EAAAI,EAAS6B,EAAA,MAOrD,IAAAC,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEAC,EAAarC,EAAQ,EAARA,CAA2D+B,EAAAC,GAExED,EAAAO,SAAAxC,EAAAC,QAAAgC,EAAAO,QAGAxC,EAAA2B,IAAAC,OAAmB,EAAsD,WACzE,IAAAa,EAAmBvC,EAAQ,GAiB3B,GAfA,iBAAAuC,MAAA,EAAoDzC,EAAAI,EAASqC,EAAA,OAE7D,SAAAxB,EAAAyB,GACA,IAAAC,EAAAC,EAAA,EAEA,IAAAD,KAAA1B,EAAA,CACA,IAAAyB,GAAAzB,EAAA0B,KAAAD,EAAAC,GAAA,SACAC,IAGA,IAAAD,KAAAD,EAAAE,IAEA,WAAAA,EAVA,CAWGX,EAAAO,OAAAC,EAAAD,QAEH,UAAAK,MAAA,uDAEAN,EAAAE,KAGAzC,EAAA2B,IAAAmB,QAAA,WAAgCP","file":"app.d0a7ec446301c370237f.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\r\\n  background: rgba(0,0,0,0.95);\\r\\n  color : red;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","// index.js file\r\nimport _ from 'lodash';\r\nimport style from '../static/style/style.css';\r\n\r\nfunction component() {\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    console.log('Looks like we are in development mode!');\r\n}\r\n\r\n  var element = document.createElement('div');\r\n  var button = document.createElement('button');\r\n  var br = document.createElement('br');\r\n\r\n\r\n  // Lodash, currently included via a script, is required for this line to work\r\n  button.innerHTML = 'Click me and look at the console!';\r\n  element.innerHTML = _.join(['Hello ', 'webpack '], ' ');\r\n\r\n\r\n  element.appendChild(br);\r\n  element.appendChild(button);\r\n\r\n\r\n// Note that because a network request is involved, some indication\r\n// of loading would need to be shown in a production-level site/app.\r\n\r\nbutton.onclick = e => import(/* webpackChunkName: \"print\" */ './print').then(module => {\r\n    var print = module.default;\r\n    print();\r\n  });\r\n\r\n  return element;\r\n }\r\n\r\n\r\n\r\n // tell the webpack that when we change printJs changes, we update\r\n\r\n  let element = component(); // Store the element to re-render on print.js changes\r\n  document.body.appendChild(element);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept('./print.js', function() {\r\n     console.log('Accepting the updated printMe module!');\r\n     document.body.removeChild(element);\r\n     element = component(); // Re-render the \"component\" to update the click handler\r\n     document.body.appendChild(element);\r\n    })\r\n\r\n  }\r\n","\nvar content = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./style.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}"],"sourceRoot":""}