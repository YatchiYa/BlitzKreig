{"version":3,"sources":["webpack:///./static/style/style.css?e851","webpack:///./static/style/style.css","webpack:///./src/index.js"],"names":["content","__webpack_require__","module","i","options","hmr","transform","insertInto","undefined","update","locals","exports","hot","accept","newContent","a","b","key","idx","Error","dispose","push","r","__webpack_exports__","element","vue","document","createElement","setAttribute","body","appendChild"],"mappings":"gFACA,IAAAA,EAAcC,EAAQ,QAEtB,iBAAAD,MAAA,EAA4CE,EAAAC,EAASH,EAAA,MAOrD,IAAAI,EAAA,CAAeC,KAAA,EAEfC,eAPAA,EAQAC,gBAAAC,GAEAC,EAAaR,EAAQ,OAARA,CAA2DD,EAAAI,GAExEJ,EAAAU,SAAAR,EAAAS,QAAAX,EAAAU,QAGAR,EAAAU,IAAAC,OAAmB,OAAsD,WACzE,IAAAC,EAAmBb,EAAQ,QAiB3B,GAfA,iBAAAa,MAAA,EAAoDZ,EAAAC,EAASW,EAAA,OAE7D,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAA,EAEA,IAAAD,KAAAF,EAAA,CACA,IAAAC,GAAAD,EAAAE,KAAAD,EAAAC,GAAA,SACAC,IAGA,IAAAD,KAAAD,EAAAE,IAEA,WAAAA,EAVA,CAWGlB,EAAAU,OAAAI,EAAAJ,QAEH,UAAAS,MAAA,uDAEAV,EAAAK,KAGAZ,EAAAU,IAAAQ,QAAA,WAAgCX,6BC3ChCP,EAAAS,QAA2BV,EAAQ,OAARA,EAAuD,IAKlFoB,KAAA,CAAcnB,EAAAC,EAAS,uEAAmE,wCCL1FF,EAAAqB,EAAAC,GAAAtB,EAAA,QAAAA,EAAA,QAeA,IAAAuB,IALAC,EAAAC,SAAAC,cAAA,QACAC,aAAA,iBACAF,SAAAG,KAAAC,YAAAL,IARA,IAMAA,EAMAC,SAAAG,KAAAC,YAAAN","file":"app.1527512854c93910639b.js","sourcesContent":["\nvar content = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../node_modules/css-loader/index.js!./style.css\", function() {\n\t\tvar newContent = require(\"!!../../node_modules/css-loader/index.js!./style.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\r\\n  background: rgba(0,0,0,0.95);\\r\\n  color : red;\\r\\n}\\r\\n\", \"\"]);\n\n// exports\n","// index.js file\r\nimport _ from 'lodash';\r\nimport style from '../static/style/style.css';\r\n\r\nfunction component() {\r\n\r\n  if (process.env.NODE_ENV !== 'production') {\r\n    console.log('Looks like we are in development mode!');\r\n}\r\n\r\n  var vue = document.createElement('div');\r\n  vue.setAttribute(\"id\", \"app\");\r\n    document.body.appendChild(vue);\r\n\r\n}\r\nlet element = component(); // Store the element to re-render on print.js changes\r\ndocument.body.appendChild(element);\r\n\r\n\r\n  // var element = document.createElement('div');\r\n  // var button = document.createElement('button');\r\n  // var br = document.createElement('br');\r\n\r\n\r\n  // Lodash, currently included via a script, is required for this line to work\r\n  // button.innerHTML = 'Click me and look at the console!';\r\n  // element.innerHTML = _.join(['Hello ', 'webpack '], ' ');\r\n\r\n\r\n  //element.appendChild(br);\r\n  //element.appendChild(button);\r\n\r\n\r\n// Note that because a network request is involved, some indication\r\n// of loading would need to be shown in a production-level site/app.\r\n\r\n// button.onclick = e => import(/* webpackChunkName: \"print\" */ './print').then(module => {\r\n  //  var print = module.default;\r\n  //  print(\" Hello \");\r\n  // });\r\n\r\n  // return element;\r\n //}\r\n\r\n\r\n\r\n // tell the webpack that when we change printJs changes, we update\r\n\r\n  // let element = component(); // Store the element to re-render on print.js changes\r\n  // document.body.appendChild(element);\r\n/**\r\n  if (module.hot) {\r\n    module.hot.accept('./print.js', function() {\r\n     console.log('Accepting the updated printMe module!');\r\n     document.body.removeChild(element); */\r\n    // element = component(); // Re-render the \"component\" to update the click handler\r\n     //document.body.appendChild(element);\r\n  //  })\r\n\r\n//  }\r\n"],"sourceRoot":""}